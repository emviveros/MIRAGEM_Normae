#N canvas 618 34 561 737 10;
#X obj 5 336 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 5 562 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 5 624 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#X obj 6 710 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 116 343 cnv 17 3 194 empty empty 0 5 9 0 16 -228856 -162280
0;
#X obj 110 41 cnv 4 4 4 empty empty GUI 0 28 2 18 -233017 -1 0;
#X obj 26 41 cnv 4 4 4 empty empty Keyboard 0 28 2 18 -233017 -1 0
;
#X obj 3 4 cnv 15 301 42 empty empty keyboard 20 20 2 37 -233017 -1
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 3 4 graph;
#X obj 312 127 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 206 341 float;
#X text 206 541 float;
#X text 256 341 - MIDI Note value, f 42;
#X text 256 355 - MIDI Note and Velocity values, f 42;
#X text 170 355 list <f \, f>;
#X obj 116 542 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X obj 115 570 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 259 570 - MIDI Note and Velocity values;
#X text 170 570 list <f \, f>;
#X obj 307 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#X obj 346 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 459 12 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 479 12 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 516 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 465 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 503 27 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1;
#X restore 306 4 graph;
#X text 67 87 [keyboard] is a GUI that receives MIDI notes and also
generates them from mouse clicking. Right click it for properties!
, f 64;
#X text 256 397 - set key width, f 46;
#X text 158 397 width <float>;
#X text 152 411 height <float>;
#X text 170 425 oct <float>;
#X text 256 425 - transpose octaves up or down, f 42;
#X text 164 439 8ves <float>;
#X text 256 439 - set number of octaves, f 42;
#X text 164 453 lowc <float>;
#N canvas 751 116 570 612 example 0;
#X obj 67 98 tgl 20 0 empty empty empty 17 7 0 10 -228856 -1 -1 0 1
;
#X obj 67 178 makenote 100 1500;
#X obj 67 128 metro 800;
#X obj 279 331 catch~ \$0-voice;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 128 278 throw~ \$0-voice;
#X obj 39 144 * 1.497;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 13 0;
#X connect 6 0 9 0;
#X connect 6 0 14 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 14 0 8 0;
#X restore 67 451 pd voice;
#N canvas 1014 119 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 128 278 throw~ \$0-voice;
#X obj 39 144 * 1.497;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 13 0;
#X connect 6 0 9 0;
#X connect 6 0 14 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 14 0 8 0;
#X restore 88 427 pd voice;
#N canvas 1014 119 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 128 278 throw~ \$0-voice;
#X obj 39 144 * 1.497;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 13 0;
#X connect 6 0 9 0;
#X connect 6 0 14 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 14 0 8 0;
#X restore 110 401 pd voice;
#N canvas 1014 119 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 128 278 throw~ \$0-voice;
#X obj 39 144 * 1.497;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 13 0;
#X connect 6 0 9 0;
#X connect 6 0 14 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 14 0 8 0;
#X restore 132 377 pd voice;
#X obj 385 470 clone;
#X text 309 469 see also:;
#X text 185 90 Try clicking and dragging \, it also works and slides
through chromatically!, f 52;
#X obj 286 396 else/out~;
#X obj 67 217 else/keyboard 19 80 3 2 0 0 empty empty;
#X obj 67 153 else/rand.i 36 72;
#X obj 67 343 else/voices 4 1;
#X obj 67 308 else/display 7;
#X obj 279 357 else/plate.rev~ 50 0.6 0.25 0.8 0.8, f 18;
#X text 64 28 In this example [keyboard] displays randomly generated
notes and driving 4 voices. Also see that each voice subpatch has [adsr~]'s
status outlet to control the DSP status for that subpatch - open and
check it. You should also try pd's [clone] object for managing polyphonic
synths., f 72;
#X connect 0 0 2 0;
#X connect 1 0 12 0;
#X connect 1 1 12 1;
#X connect 2 0 13 0;
#X connect 3 0 16 0;
#X connect 12 0 15 0;
#X connect 13 0 1 0;
#X connect 14 0 4 0;
#X connect 14 1 5 0;
#X connect 14 2 6 0;
#X connect 14 3 7 0;
#X connect 15 0 14 0;
#X connect 16 0 11 0;
#X connect 16 1 11 1;
#X restore 480 225 pd example;
#X text 200 144 octave up;
#X text 222 172 octave down;
#X text 256 541 - velocity of MIDI note value, f 42;
#X text 152 481 toggle <float>;
#X obj 160 216 else/keyboard 18 70 2 3 0 0 empty empty;
#N canvas 795 23 485 468 toggle 0;
#X obj 48 175 else/keyboard 19 80 3 3 1 0 empty empty;
#X text 167 63 In toggle mode \, you need to click on a note to set
it On or Off. Dragging doesn't work., f 43;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-tgl;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 48 409 pd voice;
#X obj 48 301 else/voices 4 1;
#X msg 48 94 toggle \$1;
#X obj 48 66 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1 1
;
#X obj 48 34 loadbang;
#X msg 81 135 flush;
#X obj 273 304 catch~ \$0-tgl;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-tgl;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 69 385 pd voice;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-tgl;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 91 359 pd voice;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-tgl;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 113 335 pd voice;
#X text 167 98 When in toggle mode \, you can flush hanging Note On
messages. Note that the flush message also flushes hanging notes from
messages from the inlets., f 43;
#X obj 48 266 else/display 7;
#X obj 280 372 else/out~;
#X obj 273 333 else/plate.rev~ 50 0.6 0.25 0.8 0.8, f 18;
#X connect 0 0 13 0;
#X connect 3 0 2 0;
#X connect 3 1 9 0;
#X connect 3 2 10 0;
#X connect 3 3 11 0;
#X connect 4 0 0 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 0 0;
#X connect 8 0 15 0;
#X connect 13 0 3 0;
#X connect 15 0 14 0;
#X connect 15 1 14 1;
#X restore 486 245 pd toggle;
#X text 206 495 flush;
#X text 256 411 - set keyboard height, f 42;
#X text 256 453 - set number of lowest C (e.g. 4 = C4), f 42;
#X text 256 481 - sets toggle mode on <1> of off <0>, f 42;
#X text 256 495 - flushes hanging Note On keys, f 42;
#X text 164 467 norm <float>;
#X text 256 467 - set velocity normalization, f 42;
#X obj 160 302 else/display 7;
#X text 227 306 MIDI Note / Velocity;
#X obj 312 147 metro 1000;
#X obj 312 190 makenote 100 500;
#X msg 173 172 oct -1;
#X msg 160 145 oct 1;
#N canvas 795 23 487 425 shift 0;
#X obj 51 141 else/keyboard 19 80 3 3 0 0 empty empty;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-shift;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 51 376 pd voice;
#X obj 51 268 else/voices 4 1;
#X msg 51 87 flush;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-shift;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 72 352 pd voice;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-shift;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 94 326 pd voice;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 279 throw~ \$0-shift;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 116 302 pd voice;
#X obj 280 259 catch~ \$0-shift;
#X text 130 107 Press shift and test this below.;
#X obj 51 233 else/display 7;
#X obj 287 330 else/out~;
#X obj 280 291 else/plate.rev~ 50 0.6 0.25 0.8 0.8, f 18;
#X text 130 35 In regular nome ("non toggle: mode) \, you can also
toggle notes by pressing the shift key when you click on the notes
to set them on and off. This way you can have the two options. The
flush message also flushes hanging notes from shift clicking., f 49
;
#X connect 0 0 9 0;
#X connect 2 0 1 0;
#X connect 2 1 4 0;
#X connect 2 2 5 0;
#X connect 2 3 6 0;
#X connect 3 0 0 0;
#X connect 7 0 11 0;
#X connect 9 0 2 0;
#X connect 11 0 10 0;
#X connect 11 1 10 1;
#X restore 491 265 pd shift;
#N canvas 729 72 482 443 normalize 0;
#X obj 47 164 else/keyboard 19 80 3 3 0 0 empty empty;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-norm;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 47 408 pd voice;
#X obj 47 300 else/voices 4 1;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-norm;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 68 384 pd voice;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 278 throw~ \$0-norm;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 90 358 pd voice;
#N canvas 870 145 477 340 voice 0;
#X obj 125 33 inlet;
#X obj 213 99 / 127;
#X obj 398 171 tgl 40 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 125 186 *~;
#X obj 128 247 *~;
#X obj 398 223 switch~;
#X obj 125 95 mtof;
#X obj 262 208 vsl 20 100 0 1 0 0 xxx xx empty 0 -9 0 10 -228856 -1
-1 0 1;
#X obj 38 185 else/sine~;
#X obj 125 136 else/sine~;
#X obj 125 65 unpack float float;
#X obj 213 136 else/adsr~ 500 200 0.5 1000;
#X obj 262 179 else/sig2float~;
#X obj 39 144 * 1.497;
#X obj 128 279 throw~ \$0-norm;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 5 0;
#X connect 3 0 8 2;
#X connect 4 0 14 0;
#X connect 6 0 9 0;
#X connect 6 0 13 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 10 0 6 0;
#X connect 10 1 1 0;
#X connect 11 0 3 1;
#X connect 11 0 4 1;
#X connect 11 0 12 0;
#X connect 11 1 2 0;
#X connect 12 0 7 0;
#X connect 13 0 8 0;
#X restore 112 334 pd voice;
#X msg 47 104 norm \$1;
#X floatatom 47 68 5 0 127 0 - - -;
#X obj 47 261 else/display 7;
#X text 127 22 Note that the velocity depends on where you click on
the vertical axis. The lower you click \, the higher the velocity is.
, f 48;
#X obj 282 283 catch~ \$0-norm;
#X text 127 62 Nonetheless \, you can set a normalized velocity value
for all clicks with the 'norm' message. It takes values from 0 to 127
\, so if you set to a value different than zero \, that value is set
for all generated note on messages. but if you set it to '0' \, then
the there's no normalization and velocity depends where you click.
, f 48;
#X obj 290 351 else/out~;
#X obj 282 312 else/plate.rev~ 50 0.6 0.25 0.8 0.8, f 18;
#X connect 0 0 8 0;
#X connect 2 0 1 0;
#X connect 2 1 3 0;
#X connect 2 2 4 0;
#X connect 2 3 5 0;
#X connect 6 0 0 0;
#X connect 7 0 6 0;
#X connect 8 0 2 0;
#X connect 10 0 13 0;
#X connect 13 0 12 0;
#X connect 13 1 12 1;
#X restore 467 285 pd normalize;
#N canvas 645 30 517 652 send/receive 0;
#X text 48 22 You can set send/receive names with the -send/-receive
flags or the 'send'/'receive' messages - make sure to escape "\$0"
properly with backslashes (as in: "\\\$0"). Setting these to 'empty'
removes the send/receive symbols., f 67;
#X obj 51 99 else/keyboard 19 80 3 3 0 0 empty empty;
#X obj 54 353 else/keyboard 19 80 3 3 0 0 \$0-keyboard-snd \$0-keyboard-rcv
;
#X msg 66 326 send empty \, receive empty;
#X obj 54 299 initmess send \\\$0-keyboard-snd \, receive \\\$0-keyboard-rcv
;
#X obj 51 225 s \$0-keyboard-rcv;
#X obj 58 464 r \$0-keyboard-snd;
#X obj 58 493 else/display;
#X text 158 190 Note you can send a list to the keyboard object;
#X obj 51 193 else/display;
#X text 172 209 This way you don't need to use both inlets and just
rely on the built in receive symbol, f 45;
#X text 50 550 Note that inside the properties window you don't need
to escape the special characters of "$" and also spaces \, both of
which are allowed. Also note that other special characters are not
allowed \, such as braces \, backslashes \, commas and semicolons.
, f 69;
#X text 204 453 Note that when you set a receive or send symbol \,
the corresponding inlets/outlet does not get drawn when you're in edit
mode. This is an indicative that the object has a send or receive symbol.
, f 41;
#X connect 1 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 6 0 7 0;
#X connect 9 0 5 0;
#X restore 449 305 pd send/receive;
#X text 158 509 send <symbol>;
#X text 256 509 - sets send symbol, f 42;
#X text 140 523 receive <symbol>;
#X text 256 523 - sets receive symbol, f 42;
#X text 75 632 -width <float>: width in pixels (default 17) | -height
<float>: height in pixels (default 80) | -oct <float>: number of octaves
(default 4) | -lowc <float>: number of lowest C (default 3 - that is
"C3") | -tgl sets to toggle mode (default non toggle) | -norm <float>:
velocity normalization value (default 0) | -send <symbol>: sets send
symbol (default 'empty') | -receive <symbol>: sets receive symbol (default
'empty') |, f 77;
#X obj 4 597 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 259 604 (none);
#N canvas 846 100 573 577 more 0;
#X text 108 358 For instance \, below \, we have \$0 used in the send
symbol. Using something like "\$1" is also possible and useful if you're
using the object in an abstraction \, then you can load a value passed
as an argument into a parameter., f 59;
#X obj 411 437 r \$0-snd;
#X obj 411 462 else/display;
#X text 83 234 Note that when you set a receive or send symbol \, the
corresponding inlets/outlet does not get drawn when you're in edit
mode. This is an indicative that the object has a send or receive symbol.
, f 67;
#X obj 130 429 else/keyboard 17 80 2 3 0 0 \$0-snd empty;
#X text 84 284 Also note that all the parameters that you can set by
inserting a symbol into a field in the properties window can also load
dollar sign arguments (\$0 \, \$1 \, \$2 \, and so on). Namely \, these
parameters are: key width \, height \, normalization \, and send/receive
symbols., f 67;
#X text 132 525 The bluish "C" note indicates it is C4 (Midi note "60")
;
#X obj 55 88 else/keyboard 17 80 4 3 0 0 empty empty;
#X text 64 22 This is the default [keyboard] object. Please get into
and out of edit mode so you can see how the [keyboard] object creates
two inlets and an outlet when you're in edit mode. The bluish "C" note
indicates it is C4 (Midi note "60")., f 75;
#X obj 55 178 else/display;
#X connect 1 0 2 0;
#X connect 7 0 9 0;
#X restore 499 174 pd more details;
#X f 7;
#X obj 312 168 else/rand.i 48 72;
#X text 31 274 see also:;
#X obj 27 298 else/pitch2note;
#X text 182 369 on <list>;
#X text 256 369 - list MIDI Notes to be on with velocity of 127;
#X text 176 383 off <list>;
#X text 256 383 - list MIDI Notes to be off with velocity of 0;
#N canvas 846 100 462 340 on/off 0;
#X obj 64 191 else/keyboard 17 80 3 3 0 0 empty empty;
#X msg 64 100 on 55 65 70 74 77;
#X msg 84 130 off 55 70 74;
#X msg 94 151 off 65 77;
#X text 53 37 The 'on' message expects a list of MIDI pitches that
are set as note on messages with a velocity of 127 \, while 'off' send
note of messages for its list of pitches.;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X restore 487 205 pd on/off;
#X connect 9 0 52 0;
#X connect 41 0 50 0;
#X connect 52 0 67 0;
#X connect 53 0 41 0;
#X connect 53 1 41 1;
#X connect 54 0 41 0;
#X connect 55 0 41 0;
#X connect 67 0 53 0;
