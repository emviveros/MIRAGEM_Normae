#N canvas 590 32 540 659 12;
#X declare -path else;
#X obj 180 403 sine~;
#X obj 229 404 *~;
#X obj 276 396 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 211 475 *~;
#X obj 229 367 *~;
#X obj 247 338 f2s~ 10;
#X obj 247 311 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 156 283 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 200 256;
#X obj 156 472 +~;
#X text 96 281 Carrier;
#X text 335 394 Index;
#X obj 156 517 sine~;
#X obj 156 559 out~;
#X obj 279 369 hsl 128 15 1 10 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 276 423 f2s~ 50;
#X obj 250 282 hsl 128 15 0.5 2 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X text 307 308 Harmonic Ratio;
#X obj 329 22 declare -path else;
#X text 56 70 We've seen how to generate FM patches that produce the
same result as PM for didactical purposes only \, as it is not quite
practical to do that (just use PM if that's what you want)., f 60
;
#X obj 156 305 f2s~ 50;
#X obj 156 251 initmess 200;
#X text 242 475 <= multiply index by modulator oscillator., f 21;
#X text 241 450 <= (index * modulating frequency);
#X text 56 139 Nonetheless \, it is quite common to see FM patches
that do multiply the modulator frequency by the modulation index. This
is in fact a more 'classical' way to do FM and makes it behave more
like PM. This is quite easy to implement and does not complicate the
patch very much.;
#X connect 0 0 3 0;
#X connect 1 0 3 1;
#X connect 2 0 14 0;
#X connect 3 0 8 1;
#X connect 4 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 4 1;
#X connect 6 0 5 0;
#X connect 7 0 19 0;
#X connect 8 0 11 0;
#X connect 11 0 12 0;
#X connect 13 0 2 0;
#X connect 14 0 1 1;
#X connect 15 0 6 0;
#X connect 19 0 4 0;
#X connect 19 0 8 0;
#X connect 20 0 7 0;
