#N canvas 521 62 966 638 12;
#X declare -path else;
#X obj 254 534 *~;
#X text 107 384 pitch;
#X obj 156 445 mtof;
#X text 109 396 MIDI;
#X text 128 471 Hz;
#X obj 156 496 osc~;
#X floatatom 156 471 5 0 0 0 - - -;
#X floatatom 214 390 5 0 0 0 - - -;
#X floatatom 272 391 5 0 0 0 - - -;
#X text 311 390 ms;
#X obj 217 352 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 156 349 bng 30 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 272 507 adsr~ 50 100 0.5 200;
#X obj 272 463 / 127;
#X obj 254 563 out~;
#X obj 272 486 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X msg 156 389 69;
#X obj 156 418 makenote 127 1000;
#X text 276 372 duration;
#X text 251 351 velocity;
#X obj 585 537 *~;
#X text 661 409 velocity;
#X obj 530 438 mtof;
#X text 502 453 Hz;
#X obj 530 503 osc~;
#X floatatom 530 468 5 0 0 0 - - -;
#X obj 530 410 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 603 412 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 487 409 Pitch;
#X obj 603 501 adsr~ 50 100 0.5 200;
#X obj 603 460 / 127;
#X obj 585 567 out~;
#X obj 861 261 notein;
#X obj 530 289 keyboard 17 80 3 3 0 0 empty empty;
#X obj 530 383 unpack;
#X text 493 48 This example uses the MIDI note information to set the
frequency of an oscillator and trigger [adsr~]. In the context of MIDI
values in the range of 0 to 127 \, we need [mtof] to convert the pitch
to hertz and divide the velocity by 127 to trigger the envelope.,
f 62;
#X obj 791 16 declare -path else;
#X text 27 31 MIDI controllers send "Note" messages from key action.
A "Note On" message is sent when a key is pressed \, and a "Note Off"
when released., f 62;
#X text 27 77 Note messages need Pitch and Velocity values. For the
Note On \, the velocity is the intensity of the note \, because the
faster the key action was \, the more intense the note should be. A
Note Off message also has a release velocity (the speed that you release
the key) \, but nowadays Note Off messages are very rare and usually
we just have a Note On message with a a velocity of 0 as a cue that
the key was released!, f 62;
#X text 27 180 The native object [makenote] generates Note messages
with Pitch and Velocity. A Note On message is represented with a velocity
value greater than 0 \, and a velocity of 0 represents a Note Off message.
The raw note MIDI data is in the range from 0 to 127 \, but Pd's [makenote]
doesn't really care and can deal with any kind of float input! When
it receives a MIDI pitch in the left inlet \, it schedules a Note Off.
In this example \, [makenote]'s arguments initially set a velocity
of 127 and schedules a note off after 1000 ms of the note on - but
you can change this via its inlets., f 62;
#X floatatom 272 441 5 0 0 0 - - -;
#X text 311 440 <= velociry;
#X text 493 127 You could set a MIDI controller now if you have one
and use [notein] to receive MIDI note information. To set your MIDI
device \, fo to "Pd => Preferences => MIDI". The [notein] object also
represents Note On messages with velocity values greater than 0 \,
and 0 velocity represents a Note Off., f 62;
#X text 493 204 In case you don't have a MIDI keyboard \, you can have
some fun using the [keyboard] object from ELSE \, instead. Like the
others \, it also represents Note Off messages with a velocity value
of 0 \, and Note On otherwise!, f 62;
#X connect 0 0 14 0;
#X connect 2 0 6 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 7 0 17 1;
#X connect 8 0 17 2;
#X connect 10 0 7 0;
#X connect 11 0 16 0;
#X connect 12 0 0 1;
#X connect 13 0 15 0;
#X connect 15 0 12 0;
#X connect 16 0 17 0;
#X connect 17 0 2 0;
#X connect 17 1 40 0;
#X connect 20 0 31 0;
#X connect 22 0 25 0;
#X connect 24 0 20 0;
#X connect 25 0 24 0;
#X connect 26 0 22 0;
#X connect 27 0 30 0;
#X connect 29 0 20 1;
#X connect 30 0 29 0;
#X connect 32 0 33 0;
#X connect 32 1 33 1;
#X connect 33 0 34 0;
#X connect 34 0 26 0;
#X connect 34 1 27 0;
#X connect 40 0 13 0;
