#N canvas 693 49 561 632 10;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 23 40 cnv 4 4 4 empty empty Stack 0 28 2 18 -233017 -1 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 71 40 cnv 4 4 4 empty empty messages 0 28 2 18 -233017 -1 0
;
#X obj 3 3 cnv 15 301 42 empty empty stack 20 20 2 37 -233017 -1 0
;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X obj 4 278 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 4 458 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 4 511 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 140 467 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 140 287 cnv 17 3 145 empty empty 0 5 9 0 16 -228856 -162280
0;
#X obj 4 606 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X text 201 285 bang;
#X obj 140 436 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 177 436 anything;
#X text 177 467 anything;
#X text 195 329 clear;
#X msg 205 175 clear;
#X obj 195 248 else/display;
#X obj 195 149 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X msg 305 196 1 2 \, 3 4 \, 5 6;
#X text 231 467 - the stored message;
#X obj 140 488 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 149 149 output;
#X text 231 436 - input messages to be stacked, f 38;
#X text 231 285 - outputs and removes a message, f 38;
#X text 231 328 - clears the stack, f 38;
#X floatatom 282 144 5 0 0 0 - - -;
#X text 320 143 store messages;
#X msg 294 170 a \, b c \, list x y \, symbol hi;
#X text 201 300 dump;
#X msg 152 181 fifo;
#X msg 116 181 lifo;
#X text 201 371 fifo;
#X text 231 371 - set order to 'fifo';
#X text 201 386 lifo;
#X text 231 386 - set order to 'lifo';
#X text 145 520 1) symbol - sets order \, <fifo> (default) or <lifo>
;
#X text 231 300 - outputs all messages and clears them;
#X text 201 401 open;
#X text 231 401 - opens [text] window;
#X text 195 416 close;
#X text 231 416 - closes [text] window;
#N canvas 986 183 503 298 open 0;
#X obj 171 217 else/display;
#X obj 171 143 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X msg 272 166 1 2 \, 3 4 \, 5 6;
#X floatatom 238 114 5 0 0 0 - - -;
#X text 279 113 store messages;
#X msg 258 139 a \, b c \, list x y \, symbol hi;
#X msg 85 144 open;
#X msg 122 144 close;
#X text 82 29 The [stack] object is based on Pd Vanilla's [text] object.
And you can open its window with the 'open' message and close it with
the 'close' message. Clicking on the object also opens it. This also
means you can manually edit the contents of stack!;
#X obj 171 193 else/stack, f 15;
#A saved;
#X text 115 193 click =>;
#X connect 1 0 9 0;
#X connect 2 0 9 1;
#X connect 3 0 9 1;
#X connect 5 0 9 1;
#X connect 6 0 9 0;
#X connect 7 0 9 0;
#X connect 9 0 0 0;
#X restore 493 192 pd open \; close;
#N canvas 1088 147 385 354 dump/export 0;
#X obj 131 156 else/display;
#X floatatom 188 98 5 0 0 0 - - -;
#X text 229 97 store messages;
#X msg 131 96 dump;
#X msg 74 94 export;
#X text 53 17 A dump message outputs all stored messages and clears
the memory. The export message outputs all stored messages but keeps
the information., f 42;
#X obj 131 129 else/stack;
#A saved;
#X obj 189 155 display;
#X obj 201 184 print N;
#X obj 131 268 print data;
#X obj 189 230 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 189 206 sel 0;
#X text 214 231 <= bang if empty;
#X connect 0 0 9 0;
#X connect 1 0 6 1;
#X connect 3 0 6 0;
#X connect 4 0 6 0;
#X connect 6 0 0 0;
#X connect 6 1 7 0;
#X connect 7 0 8 0;
#X connect 7 0 11 0;
#X connect 11 0 10 0;
#X restore 458 226 pd dump/export;
#N canvas 935 178 435 311 store 0;
#X obj 130 225 else/display;
#X msg 62 159 store \$1;
#X obj 62 135 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X text 81 51 You can store messages with the object if it has the
'-store' flag \, or you can set this via the store message., f 47
;
#X msg 130 147 open;
#X msg 229 174 a \, b c \, list x y \, symbol hi;
#X msg 202 125 clear;
#X obj 202 150 t a b;
#X obj 130 199 else/stack -store;
#A saved a \; b c \; list x y \; symbol hi \;;
#X obj 229 225 display;
#X connect 1 0 8 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 5 0 8 1;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 7 1 5 0;
#X connect 8 0 0 0;
#X connect 8 1 9 0;
#X restore 494 248 pd store;
#X obj 282 247 display;
#X obj 4 545 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#X text 195 488 float;
#X text 189 315 export;
#X text 231 315 - outputs all messages but keeps information;
#X text 219 343 n;
#X text 231 342 - outputs numer of elements in right outlet;
#X text 231 488 - number of stacked messages;
#X text 147 357 store <float>;
#X text 231 356 - non zero stores data with the patch;
#X msg 216 199 n;
#X text 153 553 -store: sets to store elements with the patch;
#X obj 195 224 else/stack lifo;
#A saved;
#X text 41 85 [stack] stores messages as stacks \, where it outputs
and removes them one by one when receiving bangs. An argument defines
the output order \, which can be 'fifo' (first in first out) or 'lifo'
(last in first out) - This needs to be set before storing data., f
76;
#X obj 4 575 cnv 3 550 3 empty empty click 8 12 0 13 -228856 -1 0;
#X text 163 583 clicking on the object opens stack's window;
#X connect 23 0 64 0;
#X connect 25 0 64 0;
#X connect 26 0 64 1;
#X connect 33 0 64 1;
#X connect 35 0 64 1;
#X connect 37 0 64 0;
#X connect 38 0 64 0;
#X connect 62 0 64 0;
#X connect 64 0 24 0;
#X connect 64 1 52 0;
