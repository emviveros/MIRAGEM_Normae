#N canvas 666 52 561 588 10;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 23 40 cnv 4 4 4 empty empty Quantize 0 28 2 18 -233017 -1 0
;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1;
#X restore 305 3 graph;
#X obj 3 2 cnv 15 301 42 empty empty quantizer~ 20 20 2 37 -233017
-1 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 3 3 graph;
#X obj 483 79 else/setdsp~;
#X obj 3 564 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 3 366 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 3 437 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 3 474 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 107 446 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 159 483 1) float;
#X obj 106 411 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X obj 107 375 cnv 17 3 30 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 3 532 cnv 3 550 3 empty empty flag 8 12 0 13 -228856 -1 0;
#X text 171 373 signal;
#X text 135 412 float/signal;
#X text 171 447 signal;
#X obj 146 209 else/graph~ 440 5;
#X obj 146 146 osc~ 51;
#X obj 98 40 cnv 4 4 4 empty empty to 0 28 2 18 -233017 -1 0;
#X obj 124 40 cnv 4 4 4 empty empty steps 0 28 2 18 -233017 -1 0;
#X text 130 541 -mode <float>;
#X text 220 541 -;
#X obj 260 133 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 257 155 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 219 483 - step value (default = 0 \, no approximation), f
52;
#X text 219 447 - quantized signal;
#X text 221 372 - a signal to be quantized, f 40;
#X text 135 389 mode <float>;
#X text 55 88 [quantizer~] approximates a value to step values defined
by the argument. There are 4 approximation modes: round (default) \,
int \, floor & ceil., f 64;
#X text 221 388 - sets approximarion mode <0 \, 1 \, 2 or 3>;
#X text 221 411 - step value to quantize to;
#X text 232 541 sets approximation mode <0 \, 1 \, 2 or 3>;
#X text 219 499 -;
#X text 159 499 2) float;
#X text 231 499 approximation mode: 0 (round) \, 1 (int) \, 2 (floor)
or 3 (ceil) - default 0, f 50;
#X text 123 340 -1;
#X text 129 273 0;
#X text 129 204 1;
#N canvas 566 158 444 328 modes 0;
#X text 32 18 You can set the mode with the second argument \, the
-mode flag or the mode message. Modes are: 0 (round) \, 1 (int) \,
2 (floor) or 3 (ceil) - the default mode is 0 (round)., f 62;
#X obj 151 168 hsl 180 16 -10 10 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 148 194 else/display~ 8;
#X obj 148 273 else/display~ 8;
#X msg 84 183 mode \$1;
#X obj 84 87 vradio 16 1 0 4 empty empty empty 0 -8 0 10 -228856 -1
-1 0;
#X floatatom 84 159 3 0 0 0 - - -;
#X text 105 87 0: round - rounds to nearest step;
#X text 105 103 1: truncate - truncates to step;
#X text 105 120 2: floor - approximates to lower step;
#X text 105 136 3: ceil - approximates to higher step;
#X obj 148 237 else/quantizer~ 1;
#X connect 1 0 2 0;
#X connect 2 0 11 0;
#X connect 4 0 11 0;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 11 0 3 0;
#X restore 485 300 pd modes;
#X obj 146 178 else/quantizer~ 0.1;
#N canvas 801 232 476 325 compare 0;
#X obj 179 75 else/int~;
#X obj 168 97 else/floor~;
#X obj 174 120 else/ceil~;
#X text 242 50 round;
#X text 243 76 truncate;
#X text 243 97 floor;
#X text 243 120 ceil;
#X text 88 155 The above objects are like the different modes in [quantizer~]
for a setp of 1!, f 40;
#X text 106 24 Check also these:, f 19;
#X obj 138 51 expr~ round($v1);
#X text 50 215 ELSE also has the [rint~] object \, which quite similar
to the 'round' function and is also present in [expr] \, but 0.5 rounds
to 0 instead of 1!, f 62;
#X obj 206 269 else/rint~;
#X restore 473 324 pd compare;
#X connect 25 0 47 0;
#X connect 30 0 31 0;
#X connect 31 0 47 1;
#X connect 47 0 24 0;
